// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum FamilyType {
  Famille
  TEAM
}

model User {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  password    String
  name        String?
  firstName   String?
  createdAt   DateTime    @default(now())
  familyId    Int?        
  family      Family?     @relation(fields: [familyId], references: [id]) // Relation vers une seule famille
  trees       Tree[]      @relation("UserTrees") // Relation vers les arbres
  ownerFamily Family[]    @relation("FamilyOwner")
}

model Family {
  id          Int         @id @default(autoincrement())
  name        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  hash        String?
  ownerId     Int?
  type        FamilyType?
  owner       User?       @relation("FamilyOwner", fields:[ownerId], references: [id])
  users       User[]      @relation // Relation vers les utilisateurs
  trees       Tree[]      @relation("FamilyTrees") // Relation vers les arbres
}

model Tree {
  id          Int         @id @default(autoincrement())
  name        String
  familyId    Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  family      Family      @relation(fields: [familyId], references: [id], name: "FamilyTrees")
  tasks       Task[]      @relation("TreeTasks")
  users       User[]      @relation("UserTrees") // Ajout de la relation oppos√©e
}

model Task {
  id          Int         @id @default(autoincrement())
  content     String
  treeId      Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  tree        Tree        @relation(fields: [treeId], references: [id], name: "TreeTasks")
}


